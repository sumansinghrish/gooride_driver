import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(8.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.whiteA700,
      ),
      dividerTheme: DividerThemeData(
        thickness: 3,
        space: 3,
        color: appTheme.blueGray50,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 17.fSize,
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: colorScheme.primaryContainer.withOpacity(1),
          fontSize: 14.fSize,
          fontFamily: 'Hind Siliguri',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: Color(0XFF000000),
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 34.fSize,
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: colorScheme.primaryContainer.withOpacity(1),
          fontSize: 30.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        headlineSmall: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 24.fSize,
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: colorScheme.primaryContainer.withOpacity(1),
          fontSize: 13.fSize,
          fontFamily: 'Hind Siliguri',
          fontWeight: FontWeight.w700,
        ),
        labelMedium: TextStyle(
          color: colorScheme.primary,
          fontSize: 10.fSize,
          fontFamily: 'Hind Siliguri',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 20.fSize,
          fontFamily: 'Hind Siliguri',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: colorScheme.primaryContainer.withOpacity(1),
          fontSize: 17.fSize,
          fontFamily: 'Hind Siliguri',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: colorScheme.primaryContainer.withOpacity(1),
          fontSize: 15.fSize,
          fontFamily: 'Hind Siliguri',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF001D3D),
    primaryContainer: Color(0X19000000),

    // Error colors
    onError: Color(0X4C191919),
    onErrorContainer: Color(0XD1F8F8F8),

    // On colors(text colors)
    onPrimary: Color(0XFF9B9A9B),
    onPrimaryContainer: Color(0X75003566),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber300 => Color(0XFFFFC850);
  Color get amber500 => Color(0XFFF0C414);
  Color get amberA400 => Color(0XFFFFC300);

  // Black
  Color get black900 => Color(0XFF030303);

  // Blue
  Color get blue700 => Color(0XFF2672CB);

  // BlueGray
  Color get blueGray100 => Color(0XFFD7D7D7);
  Color get blueGray400 => Color(0XFF8A8A8F);
  Color get blueGray50 => Color(0XFFEFEFF4);
  Color get blueGray5001 => Color(0XFFF1F1F1);
  Color get blueGray900 => Color(0XFF242E42);

  // Gray
  Color get gray200 => Color(0XFFEEEEEE);
  Color get gray20001 => Color(0XFFEBEAEA);
  Color get gray300 => Color(0XFFDAD9E2);
  Color get gray30001 => Color(0XFFE1E0E8);
  Color get gray400 => Color(0XFFC8C7CC);
  Color get gray40001 => Color(0XFFCACACA);
  Color get gray40002 => Color(0XFFBBBBBB);
  Color get gray40003 => Color(0XFFBFBFBF);
  Color get gray40004 => Color(0XFFC1C0C8);
  Color get gray600 => Color(0XFF808080);
  Color get gray60001 => Color(0XFF6C6B6B);
  Color get gray700 => Color(0XFF636363);
  Color get gray800 => Color(0XFF4A494A);
  Color get gray900 => Color(0XFF262628);

  // Green
  Color get greenA200 => Color(0XFF4CE5B1);
  Color get greenA400 => Color(0XFF03DE73);

  // Indigo
  Color get indigo900 => Color(0XFF113984);
  Color get indigoA400 => Color(0XFF4252FF);

  // Orange
  Color get orange700 => Color(0XFFFF7A00);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
